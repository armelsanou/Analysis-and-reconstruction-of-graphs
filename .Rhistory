ggraph(graph_cors) +
geom_edge_link(aes(edge_alpha = abs(r), edge_width = abs(r), color = r)) +
geom_node_point() +
geom_node_text(aes(label = name))
# 2 --> reduce side legend
ggraph(graph_cors) +
geom_edge_link(aes(edge_alpha = abs(r), edge_width = abs(r), color = r)) +
guides(edge_alpha = "none", edge_width = "none") +
geom_node_point() +
geom_node_text(aes(label = name))
# 3 --> Improve the color gradient
ggraph(graph_cors) +
geom_edge_link(aes(edge_alpha = abs(r), edge_width = abs(r), color = r)) +
guides(edge_alpha = "none", edge_width = "none") +
scale_edge_colour_gradientn(limits = c(-1, 1), colors = c("firebrick2", "green"))+
geom_node_point() +
geom_node_text(aes(label = name))
# 4 --> Improve node display and associated text
ggraph(graph_cors) +
geom_edge_link(aes(edge_alpha = abs(r), edge_width = abs(r), color = r)) +
guides(edge_alpha = "none", edge_width = "none") +
scale_edge_colour_gradientn(limits = c(-1, 1), colors = c("firebrick2", "green"))+
geom_node_point(color = "white", size = 5) +
geom_node_text(aes(label = name), repel = TRUE)
# 5 --> Remove background grid and set title
ggraph(graph_cors) +
geom_edge_link(aes(edge_alpha = abs(r), edge_width = abs(r), color = r)) +
guides(edge_alpha = "none", edge_width = "none") +
scale_edge_colour_gradientn(limits = c(-1, 1), colors = c("firebrick2", "green"))+
geom_node_point(color = "white", size = 5) +
geom_node_text(aes(label = name), repel = TRUE) +
theme_graph() +
labs(title = "Correlations between hematoData variables (abs min = 0.3)")
library("miic")
library(tidyverse)
library(corrr)
library(igraph)
library(ggraph)
hematoData
dim(hematoData)
num_data <- sapply( hematoData, as.numeric )
tidy_cors <- num_data %>%
correlate() %>%
stretch()
head(tidy_cors, n = 20)
graph_cors <- tidy_cors %>%
filter(abs(r) > .3) %>%
graph_from_data_frame(directed = FALSE)
# Plot with ggraph
ggraph(graph_cors) +
geom_edge_link() +
geom_node_point() +
geom_node_text(aes(label = name))
# Make a fancy plot
# 1 --> improve edges display
ggraph(graph_cors) +
geom_edge_link(aes(edge_alpha = abs(r), edge_width = abs(r), color = r)) +
geom_node_point() +
geom_node_text(aes(label = name))
# 2 --> reduce side legend
ggraph(graph_cors) +
geom_edge_link(aes(edge_alpha = abs(r), edge_width = abs(r), color = r)) +
guides(edge_alpha = "none", edge_width = "none") +
geom_node_point() +
geom_node_text(aes(label = name))
# 3 --> Improve the color gradient
ggraph(graph_cors) +
geom_edge_link(aes(edge_alpha = abs(r), edge_width = abs(r), color = r)) +
guides(edge_alpha = "none", edge_width = "none") +
scale_edge_colour_gradientn(limits = c(-1, 1), colors = c("firebrick2"))+
geom_node_point() +
geom_node_text(aes(label = name))
# 4 --> Improve node display and associated text
ggraph(graph_cors) +
geom_edge_link(aes(edge_alpha = abs(r), edge_width = abs(r), color = r)) +
guides(edge_alpha = "none", edge_width = "none") +
scale_edge_colour_gradientn(limits = c(-1, 1), colors = c("firebrick2"))+
geom_node_point(color = "white", size = 5) +
geom_node_text(aes(label = name), repel = TRUE)
# 5 --> Remove background grid and set title
ggraph(graph_cors) +
geom_edge_link(aes(edge_alpha = abs(r), edge_width = abs(r), color = r)) +
guides(edge_alpha = "none", edge_width = "none") +
scale_edge_colour_gradientn(limits = c(-1, 1), colors = c("firebrick2"))+
geom_node_point(color = "white", size = 5) +
geom_node_text(aes(label = name), repel = TRUE) +
theme_graph() +
labs(title = "Correlations between hematoData variables (abs min = 0.3)")
library("miic")
library(tidyverse)
library(corrr)
library(igraph)
library(ggraph)
hematoData
dim(hematoData)
num_data <- sapply( hematoData, as.numeric )
tidy_cors <- num_data %>%
correlate() %>%
stretch()
head(tidy_cors, n = 20)
graph_cors <- tidy_cors %>%
filter(abs(r) > .3) %>%
graph_from_data_frame(directed = FALSE)
# Plot with ggraph
ggraph(graph_cors) +
geom_edge_link() +
geom_node_point() +
geom_node_text(aes(label = name))
# Make a fancy plot
# 1 --> improve edges display
ggraph(graph_cors) +
geom_edge_link(aes(edge_alpha = abs(r), edge_width = abs(r), color = r)) +
geom_node_point() +
geom_node_text(aes(label = name))
# 2 --> reduce side legend
ggraph(graph_cors) +
geom_edge_link(aes(edge_alpha = abs(r), edge_width = abs(r), color = r)) +
guides(edge_alpha = "none", edge_width = "none") +
geom_node_point() +
geom_node_text(aes(label = name))
# 3 --> Improve the color gradient
ggraph(graph_cors) +
geom_edge_link(aes(edge_alpha = abs(r), edge_width = abs(r), color = r)) +
guides(edge_alpha = "none", edge_width = "none") +
scale_edge_colour_gradientn(limits = c(-1, 1), colors = c("firebrick2", "white"))+
geom_node_point() +
geom_node_text(aes(label = name))
# 4 --> Improve node display and associated text
ggraph(graph_cors) +
geom_edge_link(aes(edge_alpha = abs(r), edge_width = abs(r), color = r)) +
guides(edge_alpha = "none", edge_width = "none") +
scale_edge_colour_gradientn(limits = c(-1, 1), colors = c("firebrick2", "white"))+
geom_node_point(color = "white", size = 5) +
geom_node_text(aes(label = name), repel = TRUE)
# 5 --> Remove background grid and set title
ggraph(graph_cors) +
geom_edge_link(aes(edge_alpha = abs(r), edge_width = abs(r), color = r)) +
guides(edge_alpha = "none", edge_width = "none") +
scale_edge_colour_gradientn(limits = c(-1, 1), colors = c("firebrick2", "white"))+
geom_node_point(color = "white", size = 5) +
geom_node_text(aes(label = name), repel = TRUE) +
theme_graph() +
labs(title = "Correlations between hematoData variables (abs min = 0.3)")
library("miic")
library(tidyverse)
library(corrr)
library(igraph)
library(ggraph)
hematoData
dim(hematoData)
num_data <- sapply( hematoData, as.numeric )
tidy_cors <- num_data %>%
correlate() %>%
stretch()
head(tidy_cors, n = 20)
graph_cors <- tidy_cors %>%
filter(abs(r) > .3) %>%
graph_from_data_frame(directed = FALSE)
# Plot with ggraph
ggraph(graph_cors) +
geom_edge_link() +
geom_node_point() +
geom_node_text(aes(label = name))
# Make a fancy plot
# 1 --> improve edges display
ggraph(graph_cors) +
geom_edge_link(aes(edge_alpha = abs(r), edge_width = abs(r), color = r)) +
geom_node_point() +
geom_node_text(aes(label = name))
# 2 --> reduce side legend
ggraph(graph_cors) +
geom_edge_link(aes(edge_alpha = abs(r), edge_width = abs(r), color = r)) +
guides(edge_alpha = "none", edge_width = "none") +
geom_node_point() +
geom_node_text(aes(label = name))
# 3 --> Improve the color gradient
ggraph(graph_cors) +
geom_edge_link(aes(edge_alpha = abs(r), edge_width = abs(r), color = r)) +
guides(edge_alpha = "none", edge_width = "none") +
scale_edge_colour_gradientn(limits = c(-1, 1), colors = c("firebrick2", "dodgerblue2"))+
geom_node_point() +
geom_node_text(aes(label = name))
# 4 --> Improve node display and associated text
ggraph(graph_cors) +
geom_edge_link(aes(edge_alpha = abs(r), edge_width = abs(r), color = r)) +
guides(edge_alpha = "none", edge_width = "none") +
scale_edge_colour_gradientn(limits = c(-1, 1), colors = c("firebrick2", "dodgerblue2"))+
geom_node_point(color = "white", size = 5) +
geom_node_text(aes(label = name), repel = TRUE)
# 5 --> Remove background grid and set title
ggraph(graph_cors) +
geom_edge_link(aes(edge_alpha = abs(r), edge_width = abs(r), color = r)) +
guides(edge_alpha = "none", edge_width = "none") +
scale_edge_colour_gradientn(limits = c(-1, 1), colors = c("firebrick2", "dodgerblue2"))+
geom_node_point(color = "white", size = 5) +
geom_node_text(aes(label = name), repel = TRUE) +
theme_graph() +
labs(title = "Correlations between hematoData variables (abs min = 0.3)")
graph_cors
tidy_cors
tidy_cors <- tidy_cors[tidy_cors["r"] <= -0.5, ]
graph_cors <- tidy_cors %>%
filter(abs(r) > .3) %>%
graph_from_data_frame(directed = FALSE)
View(tidy_cors)
tidy_cors["r"]
tidy_cors$"r"
tidy_cors <- tidy_cors[tidy_cors$"r" <= -0.5, ]
View(tidy_cors)
tidy_cors[r]
tidy_cors
tidy_cors <- num_data %>%
correlate() %>%
stretch()
tidy_cors
tidy_cors$r
tidy_cors <- tidy_cors[tidy_cors$r <= -0.5, ]
library("miic")
library(tidyverse)
library(corrr)
library(igraph)
library(ggraph)
hematoData
dim(hematoData)
num_data <- sapply( hematoData, as.numeric )
tidy_cors <- num_data %>%
correlate() %>%
stretch()
tidy_cors$r
tidy_cors <- tidy_cors[tidy_cors$r <= -0.5, ]
graph_cors <- tidy_cors %>%
filter(abs(r) > .3) %>%
graph_from_data_frame(directed = FALSE)
# Plot with ggraph
ggraph(graph_cors) +
geom_edge_link() +
geom_node_point() +
geom_node_text(aes(label = name))
# Make a fancy plot
# 1 --> improve edges display
ggraph(graph_cors) +
geom_edge_link(aes(edge_alpha = abs(r), edge_width = abs(r), color = r)) +
geom_node_point() +
geom_node_text(aes(label = name))
# 2 --> reduce side legend
ggraph(graph_cors) +
geom_edge_link(aes(edge_alpha = abs(r), edge_width = abs(r), color = r)) +
guides(edge_alpha = "none", edge_width = "none") +
geom_node_point() +
geom_node_text(aes(label = name))
# 3 --> Improve the color gradient
ggraph(graph_cors) +
geom_edge_link(aes(edge_alpha = abs(r), edge_width = abs(r), color = r)) +
guides(edge_alpha = "none", edge_width = "none") +
scale_edge_colour_gradientn(limits = c(-1, 1), colors = c("firebrick2", "dodgerblue2"))+
geom_node_point() +
geom_node_text(aes(label = name))
# 4 --> Improve node display and associated text
ggraph(graph_cors) +
geom_edge_link(aes(edge_alpha = abs(r), edge_width = abs(r), color = r)) +
guides(edge_alpha = "none", edge_width = "none") +
scale_edge_colour_gradientn(limits = c(-1, 1), colors = c("firebrick2", "dodgerblue2"))+
geom_node_point(color = "white", size = 5) +
geom_node_text(aes(label = name), repel = TRUE)
# 5 --> Remove background grid and set title
ggraph(graph_cors) +
geom_edge_link(aes(edge_alpha = abs(r), edge_width = abs(r), color = r)) +
guides(edge_alpha = "none", edge_width = "none") +
scale_edge_colour_gradientn(limits = c(-1, 1), colors = c("firebrick2", "dodgerblue2"))+
geom_node_point(color = "white", size = 5) +
geom_node_text(aes(label = name), repel = TRUE) +
theme_graph() +
labs(title = "Correlations between hematoData variables (abs min = 0.3)")
library("miic")
library(tidyverse)
library(corrr)
library(igraph)
library(ggraph)
hematoData
dim(hematoData)
num_data <- sapply( hematoData, as.numeric )
tidy_cors <- num_data %>%
correlate() %>%
stretch()
tidy_cors$r
tidy_cors <- tidy_cors[tidy_cors$r >= -1 | tidy_cors$r >= -0.5, ]
graph_cors <- tidy_cors %>%
filter(abs(r) > .3) %>%
graph_from_data_frame(directed = FALSE)
# Plot with ggraph
ggraph(graph_cors) +
geom_edge_link() +
geom_node_point() +
geom_node_text(aes(label = name))
# Make a fancy plot
# 1 --> improve edges display
ggraph(graph_cors) +
geom_edge_link(aes(edge_alpha = abs(r), edge_width = abs(r), color = r)) +
geom_node_point() +
geom_node_text(aes(label = name))
# 2 --> reduce side legend
ggraph(graph_cors) +
geom_edge_link(aes(edge_alpha = abs(r), edge_width = abs(r), color = r)) +
guides(edge_alpha = "none", edge_width = "none") +
geom_node_point() +
geom_node_text(aes(label = name))
# 3 --> Improve the color gradient
ggraph(graph_cors) +
geom_edge_link(aes(edge_alpha = abs(r), edge_width = abs(r), color = r)) +
guides(edge_alpha = "none", edge_width = "none") +
scale_edge_colour_gradientn(limits = c(-1, 1), colors = c("firebrick2", "dodgerblue2"))+
geom_node_point() +
geom_node_text(aes(label = name))
# 4 --> Improve node display and associated text
ggraph(graph_cors) +
geom_edge_link(aes(edge_alpha = abs(r), edge_width = abs(r), color = r)) +
guides(edge_alpha = "none", edge_width = "none") +
scale_edge_colour_gradientn(limits = c(-1, 1), colors = c("firebrick2", "dodgerblue2"))+
geom_node_point(color = "white", size = 5) +
geom_node_text(aes(label = name), repel = TRUE)
# 5 --> Remove background grid and set title
ggraph(graph_cors) +
geom_edge_link(aes(edge_alpha = abs(r), edge_width = abs(r), color = r)) +
guides(edge_alpha = "none", edge_width = "none") +
scale_edge_colour_gradientn(limits = c(-1, 1), colors = c("firebrick2", "dodgerblue2"))+
geom_node_point(color = "white", size = 5) +
geom_node_text(aes(label = name), repel = TRUE) +
theme_graph() +
labs(title = "Correlations between hematoData variables (abs min = 0.3)")
library("miic")
library(tidyverse)
library(corrr)
library(igraph)
library(ggraph)
hematoData
dim(hematoData)
num_data <- sapply( hematoData, as.numeric )
tidy_cors <- num_data %>%
correlate() %>%
stretch()
graph_cors <- tidy_cors %>%
filter(abs(r) > .3) %>%
graph_from_data_frame(directed = FALSE)
# Plot with ggraph
ggraph(graph_cors) +
geom_edge_link() +
geom_node_point() +
geom_node_text(aes(label = name))
# Make a fancy plot
# 1 --> improve edges display
ggraph(graph_cors) +
geom_edge_link(aes(edge_alpha = abs(r), edge_width = abs(r), color = r)) +
geom_node_point() +
geom_node_text(aes(label = name))
# 2 --> reduce side legend
ggraph(graph_cors) +
geom_edge_link(aes(edge_alpha = abs(r), edge_width = abs(r), color = r)) +
guides(edge_alpha = "none", edge_width = "none") +
geom_node_point() +
geom_node_text(aes(label = name))
# 3 --> Improve the color gradient
ggraph(graph_cors) +
geom_edge_link(aes(edge_alpha = abs(r), edge_width = abs(r), color = r)) +
guides(edge_alpha = "none", edge_width = "none") +
scale_edge_colour_gradientn(limits = c(-1, 1), colors = c("firebrick2", "dodgerblue2"))+
geom_node_point() +
geom_node_text(aes(label = name))
# 4 --> Improve node display and associated text
ggraph(graph_cors) +
geom_edge_link(aes(edge_alpha = abs(r), edge_width = abs(r), color = r)) +
guides(edge_alpha = "none", edge_width = "none") +
scale_edge_colour_gradientn(limits = c(-1, 1), colors = c("firebrick2", "dodgerblue2"))+
geom_node_point(color = "white", size = 5) +
geom_node_text(aes(label = name), repel = TRUE)
# 5 --> Remove background grid and set title
ggraph(graph_cors) +
geom_edge_link(aes(edge_alpha = abs(r), edge_width = abs(r), color = r)) +
guides(edge_alpha = "none", edge_width = "none") +
scale_edge_colour_gradientn(limits = c(-1, 1), colors = c("firebrick2", "dodgerblue2"))+
geom_node_point(color = "white", size = 5) +
geom_node_text(aes(label = name), repel = TRUE) +
theme_graph() +
labs(title = "Correlations between hematoData variables (abs min = 0.3)")
install.packages(c("bnlearn","igraph","pcalg","miic"))
install.packages(c("bnlearn", "igraph", "pcalg", "miic"))
library(tidyverse)
library(corrr)
library(igraph)
library(ggraph)
library(bnlearn)
library(pcalg)
install.packages("pcalg")
library(tidyverse)
library(corrr)
library(igraph)
library(ggraph)
library(bnlearn)
library(pcalg)
install.packages("graph")
install.packages("graph")
install.packages("graph")
install.packages("graph", repos = "https://cran.r-project.org/doc/manuals/r-patched/R-admin.html#Installing-packages")
install.packages("BiocInstaller")
source("http://bioconductor.org/biocLite.R")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("graph")
library(tidyverse)
library(corrr)
library(igraph)
library(ggraph)
library(bnlearn)
library(pcalg)
install.packages("pcalg")
library(tidyverse)
library(corrr)
library(igraph)
library(ggraph)
library(bnlearn)
library(pcalg)
library(tidyverse)
library(corrr)
library(igraph)
library(ggraph)
library(bnlearn)
library(pcalg)
install.packages("pcalg")
library(tidyverse)
library(corrr)
library(igraph)
library(ggraph)
library(bnlearn)
library(pcalg)
library(pcalg)
help("insurance")
data("insurance")
dag = model2network(modelstring)
modelstring = paste0("[Age][Mileage][SocioEcon|Age][GoodStudent|Age:SocioEcon]",
"[RiskAversion|Age:SocioEcon][OtherCar|SocioEcon][VehicleYear|SocioEcon:RiskAversion]",
"[MakeModel|SocioEcon:RiskAversion][SeniorTrain|Age:RiskAversion]",
"[HomeBase|SocioEcon:RiskAversion][AntiTheft|SocioEcon:RiskAversion]",
"[RuggedAuto|VehicleYear:MakeModel][Antilock|VehicleYear:MakeModel]",
"[DrivingSkill|Age:SeniorTrain][CarValue|VehicleYear:MakeModel:Mileage]",
"[Airbag|VehicleYear:MakeModel][DrivQuality|RiskAversion:DrivingSkill]",
"[Theft|CarValue:HomeBase:AntiTheft][Cushioning|RuggedAuto:Airbag]",
"[DrivHist|RiskAversion:DrivingSkill][Accident|DrivQuality:Mileage:Antilock]",
"[ThisCarDam|RuggedAuto:Accident][OtherCarCost|RuggedAuto:Accident]",
"[MedCost|Age:Accident:Cushioning][ILiCost|Accident]",
"[ThisCarCost|ThisCarDam:Theft:CarValue][PropCost|ThisCarCost:OtherCarCost]")
dag = model2network(modelstring)
View(dag)
data = model2network(modelstring)
data
View(data)
class(data)
amat(data)
?hc
data <- sapply(data, as.numeric)
data <- sapply(data, as.numeric )
mat <- amat(data) #matrice d'adjacence
hc(mat)
hc(as.data.frame(mat))
as.data.frame(mat)
myHc <-
myIgraph <- igraph::graph_from_adjacency_matrix(amat(data), mode="directed")
plot(myIgraph)
myHc <- bnlearn::hc(insurance)  #bnlearn object pas facile à manipuler, passer par un igraph
myHc <- bnlearn::hc(insurance)  #bnlearn object pas facile à manipuler, passer par un igraph (exploiter la matrice d'adjacence)
myHcAdj <- amat(myHc)
data = model2network(modelstring)
data
class(data)
mat <- amat(data) #matrice d'adjacence
myHc <- bnlearn::hc(insurance)  #bnlearn object pas facile à manipuler, passer par un igraph (exploiter la matrice d'adjacence)
myHcAdj <- amat(myHc)
myIgraph <- igraph::graph_from_adjacency_matrix(amat(data), mode="directed")
plot(myIgraph)
?pc
??pc
install.packages("pcalg")
library(pcalg)
library(RBGL)
library("RBGL")
source("http://bioconductor.org/biocLite.R")
biocLite("RBGL")
install.packages("biocLite")
if (!require("Bioconductor", quietly = TRUE))
install.packages("Bioconductor")
BiocManager::install("RBGL")
library(pcalg)
??pc
?pc
library("readxl")
library("FactoMineR")
library("factoextra")
library(Factoshiny)
library(NbClust)
library(caret)
library(mclust)
chang_data <-  read_excel("Chang_15.xlsx")
chang_data <-  read_excel("Chang_15.xlsx")
chang_true <- read_excel("Chang_True.xlsx")
library("readxl")
library("FactoMineR")
library("factoextra")
library(Factoshiny)
library(NbClust)
library(caret)
library(mclust)
chang_data <-  read_excel("Chang_15.xlsx")
chang_true <- read_excel("Chang_True.xlsx")
chang_data <-  read_excel(paste0(getwd(), "/Chang_15.xlsx"))
